generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  bio       String?  @db.Text
  website   String?  @db.VarChar(255)
  avatarUrl String?  @map("avatar_url") @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  images    Image[]

  @@index([email])
  @@map("users")
}

model Image {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @map("user_id") @db.Uuid
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  filename  String   @db.VarChar(255)
  url       String   @unique @db.VarChar(1024)
  objectKey String   @unique @map("object_key") @db.VarChar(1024)
  bucket    String   @default("images") @db.VarChar(63)
  provider  String   @default("r2") @db.VarChar(20)
  mimeType  String   @map("mime_type") @db.VarChar(50)
  size      Int
  metadata  Json?
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@index([userId, createdAt])
  @@index([objectKey])
  @@map("images")
}
